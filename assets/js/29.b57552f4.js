(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{296:function(t,a,s){"use strict";s.r(a);var n=s(13),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"十八、图形与canvas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十八、图形与canvas"}},[t._v("#")]),t._v(" 十八、图形与Canvas")]),t._v(" "),a("h3",{attrs:{id:"减少重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少重绘"}},[t._v("#")]),t._v(" 减少重绘")]),t._v(" "),a("ul",[a("li",[t._v("requestAnimationFrame(fn?:Function):Long")])]),t._v(" "),a("p",[t._v("并不是专用于 Canvas，而是用于浏览器重绘时阶段性的进行动画，在浏览器触发重绘事件时调用参数 fn，若在 fn 中继续进行动画，则可以减少浏览器进行重绘，requestAnimationFrame() 返回一个请求 id。")]),t._v(" "),a("ul",[a("li",[t._v("cancelAnimationFarme"),a("br"),t._v("\n用于取消 requestAnimationFrame，传入 requestAnimationFrame 的 id。")])]),t._v(" "),a("h3",{attrs:{id:"画布与上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#画布与上下文"}},[t._v("#")]),t._v(" 画布与上下文")]),t._v(" "),a("p",[t._v("使用 html5 的新标签 "),a("code",[t._v("<canvas>")]),t._v(" 进行绘画，属性 width 和 height 设置画布宽高。")]),t._v(" "),a("p",[t._v("注意，若直接在选择器上设置 css 样式，会导致图案比例不对。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("canvas")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token special-attr"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),a("span",{pre:!0,attrs:{class:"token value css language-css"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1px solid red")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("canvas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("获取 canvas 节点后使用 getContext(type:'2d'|...) 取得绘图上下文，即画笔，并利用上下文中作画。")]),t._v(" "),a("p",[t._v("注意，getContext 方法未必存在，平面图形传参 '2d'。")]),t._v(" "),a("p",[t._v("若绘画超过画布，不显示。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" canvas "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'canvas'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("canvas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" context "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" canvans"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("画布转图片"),a("br"),t._v('\ncanvas 元素还有一个 toDataURL(MIMEtype:"image/png"|....) 方法，用于将画布转为图片链接。')])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" canvas "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'canvas'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" imgURL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" canvas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toDataURL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'image/png'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"画图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#画图"}},[t._v("#")]),t._v(" 画图")]),t._v(" "),a("p",[t._v("基于画笔上下文 context ，2d 画图默认起始坐标是左上角，定为 (0,0)，x 坐标向右增长，y 坐标向下增长。")]),t._v(" "),a("h4",{attrs:{id:"填充和描边"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#填充和描边"}},[t._v("#")]),t._v(" 填充和描边")]),t._v(" "),a("p",[t._v("皆为设置属性。 fillStyle 为填充属性，strokeStyle 为描边属性。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fillStyle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" colorStr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#FFF'")]),t._v("\ncontext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strokeStyle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" colorStr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#FFF'")]),t._v("\n")])])]),a("h4",{attrs:{id:"绘制矩形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制矩形"}},[t._v("#")]),t._v(" 绘制矩形")]),t._v(" "),a("p",[t._v("画布中只可以直接画矩形（rectangle），每一个绘制矩形的方法皆有四个参数，分别是x坐标、y坐标、矩形宽度、矩形长度，皆为数值，表示像素值。")]),t._v(" "),a("ul",[a("li",[t._v("fillRect(x,y,width,height)"),a("br"),t._v("\n填充一个矩形")]),t._v(" "),a("li",[t._v("strokeRect(x,y,width,height)\n描绘一个矩形轮廓")]),t._v(" "),a("li",[t._v("clearRect(x,y,width,height)\n画一个白底矩形，类似于清除")])]),t._v(" "),a("h4",{attrs:{id:"绘制路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制路径"}},[t._v("#")]),t._v(" 绘制路径")]),t._v(" "),a("p",[t._v("调用上下文的 beginPath 方法表示开始绘制路径，可以描绘的路径如下：")]),t._v(" "),a("ul",[a("li",[t._v("arc(x,y,radius,sAngle,eAngle,resverse)"),a("br"),t._v("\n从坐标(x,y)为圆心，从东的方向顺时针，以 radius\n为半径，画一条弧线，参数 resverse 表示是否逆时针计算角度。注意 sAngle 和 eAngle 为弧度制，eAngle 若不合法，则默认为 2*Math.PI，sAngle不好说。")]),t._v(" "),a("li",[t._v("arcTo(x,y,x1,y1,radius)"),a("br"),t._v("\n从起点开始，经过点(x,y)，到达(x1,y1)，弧线半径为 radius")]),t._v(" "),a("li",[t._v("quadraticCurveTo(cx, cy, x, y)"),a("br"),t._v("\n以(cx, cy)为控制点，绘制一条从上一点到(x, y)\n的弧线。")]),t._v(" "),a("li",[t._v("bezierCurveTo(c1x, c1y, c2x, c2y, x, y)"),a("br"),t._v("\n以(c1x, c1y)和(c2x, c2y)为控制点，\n绘制一条从上一点到(x, y)的弧线。")]),t._v(" "),a("li",[t._v("lineTo(x,y)"),a("br"),t._v("\n从上一点到点(x,y)的直线")]),t._v(" "),a("li",[t._v("moveTo(x,y)"),a("br"),t._v("\n把绘制光标移动到(x, y)。")]),t._v(" "),a("li",[t._v("rect(x, y, width, height)"),a("br"),t._v("\n画矩形")])]),t._v(" "),a("h4",{attrs:{id:"路径完成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径完成"}},[t._v("#")]),t._v(" 路径完成")]),t._v(" "),a("ul",[a("li",[t._v("closePath()"),a("br"),t._v("\n返回起始点")]),t._v(" "),a("li",[t._v("fill()"),a("br"),t._v("\n填充路径")]),t._v(" "),a("li",[t._v("stroke()"),a("br"),t._v("\n描绘路径")])]),t._v(" "),a("h4",{attrs:{id:"检查路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查路径"}},[t._v("#")]),t._v(" 检查路径")]),t._v(" "),a("p",[t._v("检查路径的方法是检查某点是否如期的在路径上。")]),t._v(" "),a("p",[t._v("context.isPointInPath(x,y):Boolean")]),t._v(" "),a("h4",{attrs:{id:"绘制文字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制文字"}},[t._v("#")]),t._v(" 绘制文字")]),t._v(" "),a("p",[t._v("绘制文字前，需了解上下文的文字相关属性。")]),t._v(" "),a("p",[t._v("但是此属性有默认值，可以不设。")]),t._v(" "),a("h5",{attrs:{id:"文本属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本属性"}},[t._v("#")]),t._v(" 文本属性")]),t._v(" "),a("ul",[a("li",[t._v("font"),a("br"),t._v("\n字体相关，例如字体大小，字体样式等。")]),t._v(" "),a("li",[t._v("textAlign"),a("br"),t._v("\n字体对齐方式，有 start/end 和 right/left 可选，但是推荐使用 start/end，表示坐标在文本的左右侧。")]),t._v(" "),a("li",[t._v("textBaseLine"),a("br"),t._v('\n文本的基线，值包括 "top" 、 "hanging" 、 "middle" 、\n"alphabetic"、"ideographic"和"bottom"。')])]),t._v(" "),a("h5",{attrs:{id:"绘制文字-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制文字-2"}},[t._v("#")]),t._v(" 绘制文字")]),t._v(" "),a("p",[t._v("context.fillText(words, x, y) 和 context.strokeText(words, x, y);")]),t._v(" "),a("h4",{attrs:{id:"变换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变换"}},[t._v("#")]),t._v(" 变换")]),t._v(" "),a("p",[t._v("用户操作图像，即")]),t._v(" "),a("ul",[a("li",[t._v("rotate(angle)"),a("br"),t._v("\n围绕原点把图像旋转 angle 弧度")]),t._v(" "),a("li",[t._v("scale(scaleX,scaleY)"),a("br"),t._v("\nx轴缩放scaleX倍，y轴缩放scaleY轴")]),t._v(" "),a("li",[t._v("translate(x, y)"),a("br"),t._v("\n把原点移动到(x, y)。执行这个操作后，坐标(0, 0)就会变成(x, y)。")]),t._v(" "),a("li",[t._v("transform(m1_1, m1_2, m2_1, m2_2, dx, dy)\n通过矩阵乘法直接修改矩阵。")])]),t._v(" "),a("h4",{attrs:{id:"绘制图像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制图像"}},[t._v("#")]),t._v(" 绘制图像")]),t._v(" "),a("p",[t._v("获取图像，调用上下文的 drawImage() 方法将图像绘制在画布中。")]),t._v(" "),a("ul",[a("li",[t._v("context.drawImage(img,x,y,width,height)")]),t._v(" "),a("li",[t._v("context.drawImage(img, x, y, width , height, c_x, c_y, c_width, c_height);")])]),t._v(" "),a("h4",{attrs:{id:"阴影"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阴影"}},[t._v("#")]),t._v(" 阴影")]),t._v(" "),a("ul",[a("li",[t._v("shadowColor\n阴影颜色")]),t._v(" "),a("li",[t._v("shadowOffsetX\n阴影相对于X轴的偏移量")]),t._v(" "),a("li",[t._v("shadowOffsetY\n阴影相对于Y轴的偏移量")]),t._v(" "),a("li",[t._v("shadowBlur\n阴影模糊量")])]),t._v(" "),a("h4",{attrs:{id:"渐变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渐变"}},[t._v("#")]),t._v(" 渐变")]),t._v(" "),a("p",[t._v("调用上下文的 createLinearGradient(s_x,s_y,e_x,e_y) 方法创建一个渐变对象。")]),t._v(" "),a("p",[t._v("该对象有 addColorStop(num,color) 设置渐变色")]),t._v(" "),a("p",[t._v("其中 num 表示色标位置，范围为 0~1，0 表示第一种颜色，1 表示最后一种颜色。")]),t._v(" "),a("p",[t._v("可以把渐变对象赋给 fillStyle 或 strokeStyle 属性，从而以渐变填充\n或描画绘制的图形：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" gradient "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createLinearGradient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \ngradient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addColorStop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"white"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \ngradient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addColorStop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"black"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"图案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图案"}},[t._v("#")]),t._v(" 图案")]),t._v(" "),a("p",[t._v("调用上下文的 createPatten(img,repeat) 创建图案，返回图案对象。")]),t._v(" "),a("p",[t._v("参数 repeat 表示图像如何重复，与 css 中 background-repeat 的取值相同。")]),t._v(" "),a("p",[t._v("可以把这个对象赋给 fillStyle 或 strokeStyle 属性，从而以渐变填充\n或描画绘制的图形。")]),t._v(" "),a("h4",{attrs:{id:"图像数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图像数据"}},[t._v("#")]),t._v(" 图像数据")]),t._v(" "),a("p",[t._v("调用上下文的 getImageData(x,y,width,height) 方法获取原始图像数据，返回一个imageData对象。")]),t._v(" "),a("p",[t._v("imageData对象包含三个属性，width、height 和 data。")]),t._v(" "),a("p",[t._v("data 为一个数组，每四个为一组表示一个像素信息，分别是 rgba(red,yellow,blue,alpha) 中代表红黄蓝透明度。每个值都在0~255中，连alpha都是。")]),t._v(" "),a("h4",{attrs:{id:"合成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合成"}},[t._v("#")]),t._v(" 合成")]),t._v(" "),a("p",[t._v("上下文有两个属性，globalAlpha 和 globalCompositionOperation。")]),t._v(" "),a("p",[t._v("globalAlpha 是指全局透明度，范围为0~1，分别表示不透明到透明。")]),t._v(" "),a("p",[t._v("设置了globalAlpha，可使图案透过下面图案，达到合成的效果，但真实的合成是使用另一个属性。")]),t._v(" "),a("p",[t._v("globalCompositionOperation 属性使新绘制的形状与上下文中已有的形状融合，可以取下列值：")]),t._v(" "),a("ul",[a("li",[t._v("source-over"),a("br"),t._v("\n默认值，新图形覆盖原有图形。")]),t._v(" "),a("li",[t._v("source-in"),a("br"),t._v("\n取交集，画布上只绘制出新图形与原有图形重叠的部分，其余部分全部透明。")]),t._v(" "),a("li",[t._v("source-out"),a("br"),t._v("\n取+集，画布上只绘制出新图形不与原有图形重叠的部分，其余部分全部透明。")]),t._v(" "),a("li",[t._v("source-atop"),a("br"),t._v("\n新图形只绘制出与原有图形重叠的部分，原有图形不受影响。")]),t._v(" "),a("li",[t._v("destination-over"),a("br"),t._v("\n新图形绘制在原有图形下面，重叠部分只有原图形透明像素下的部分可见。")]),t._v(" "),a("li",[t._v("destination-in"),a("br"),t._v("\n新图形绘制在原有图形下面，画布上只剩下二者重叠的部分，其余部分完全\n透明。")]),t._v(" "),a("li",[t._v("destination-out"),a("br"),t._v("\n新图形与原有图形重叠的部分完全透明，原图形其余部分不受影响。")]),t._v(" "),a("li",[t._v("destination-atop"),a("br"),t._v("\n新图形绘制在原有图形下面，原有图形与新图形不重叠的部分完全透明。")]),t._v(" "),a("li",[t._v("lighter"),a("br"),t._v("\n新图形与原有图形重叠部分的像素值相加，使该部分变亮。")]),t._v(" "),a("li",[t._v("copy"),a("br"),t._v("\n新图形将擦除并完全取代原有图形。")]),t._v(" "),a("li",[t._v("xor"),a("br"),t._v("\n新图形与原有图形重叠部分的像素执行“异或”计算。")])]),t._v(" "),a("h3",{attrs:{id:"webgl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webgl"}},[t._v("#")]),t._v(" WebGL")]),t._v(" "),a("p",[t._v("是为 3D 画图，基于 OpenGL 着色器语言（GLSL）绘画。而 2d 的绘画是基于 js 语言的。")]),t._v(" "),a("p",[t._v("调用 canvas 的 getContext('webgl',options) 生成 3d 上下文 gl 时，options 参数可以设置 webGL 的属性，有下列属性。")]),t._v(" "),a("ul",[a("li",[t._v("alpha"),a("br"),t._v("\n布尔值，表示是否为上下文创建透明通道缓冲区，默认为 true。")]),t._v(" "),a("li",[t._v("depth"),a("br"),t._v("\n布尔值，表示是否使用 16 位深缓冲区，默认为 true。")]),t._v(" "),a("li",[t._v("tencil"),a("br"),t._v("\n布尔值，表示是否使用 8 位模板缓冲区，默认为 false。")]),t._v(" "),a("li",[t._v("ntialias"),a("br"),t._v("\n布尔值，表示是否使用默认机制执行抗锯齿操作，默认为 true。")]),t._v(" "),a("li",[t._v("premultipliedAlpha"),a("br"),t._v("\n布尔值，表示绘图缓冲区是否预乘透明度值，默认为 true。")]),t._v(" "),a("li",[t._v("reserveDrawingBuffer"),a("br"),t._v("\n布尔值，表示绘图完成后是否保留绘图缓冲区，默认为 false。\n建议在充分了解这个选项的作用后再自行修改，因为这可能会影响性能。")])]),t._v(" "),a("p",[t._v("常使用 try-catch 检测浏览器是否能创建 webGl 上下文。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("drawing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n     gl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" drawing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webgl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 什么也不做")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 WebGL ")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"WebGL context could not be created."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"webgl-和-opengl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webgl-和-opengl"}},[t._v("#")]),t._v(" WebGL 和 OpenGL")]),t._v(" "),a("p",[t._v("WebGL 是 OpenGL ES 2.0 的 Web\n版，所以内容皆是其衍生，即 JavaScript 所实现的 OpenGL。")]),t._v(" "),a("ul",[a("li",[t._v("常量\nWebGL 支持大部分 OpenGL 常量，但变量名可能会改变，即不包含 'GL_' 前缀。")]),t._v(" "),a("li",[t._v("方法命名")])]),t._v(" "),a("p",[t._v("TODO")])])}),[],!1,null,null,null);a.default=e.exports}}]);