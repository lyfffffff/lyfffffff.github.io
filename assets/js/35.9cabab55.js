(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{299:function(t,s,a){"use strict";a.r(s);var n=a(13),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("[toc]")]),t._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("本篇笔记基于 Vue Router 官网")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://router.vuejs.org/zh/guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue Router"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("路由响应式渲染组件，和页面渲染有密不可分的关系，故先讲页面渲染的发展，最开始页面渲染是由后端渲染的，而后慢慢发展为前端渲染，最后变成 SPA。")]),t._v(" "),s("h3",{attrs:{id:"后端渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后端渲染"}},[t._v("#")]),t._v(" 后端渲染")]),t._v(" "),s("p",[t._v("后端渲染即前端只负责展示，没有或很少 js 和后端交互，结构为 "),s("code",[t._v("css + html + jsp")]),t._v(" 或 "),s("code",[t._v("css + html + php")]),t._v("。")]),t._v(" "),s("p",[t._v("后端处理 url 和页面之间的映射关系，url 发送到服务器，服务器会通过正则对该 url 进行匹配，并且给某 Controller 进行处理，Controller 处理后生成 html 页面或数据， 返回给浏览器。")]),t._v(" "),s("p",[t._v("故后端渲染网页在服务器渲染完成，再返回给浏览器，而不是在浏览器端进行渲染。")]),t._v(" "),s("p",[s("strong",[t._v("Tips")]),t._v("\njsp（java server page）= 前端 + java 在一个页面")]),t._v(" "),s("h3",{attrs:{id:"前端渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端渲染"}},[t._v("#")]),t._v(" 前端渲染")]),t._v(" "),s("p",[t._v("随着需求复杂化，页面不仅仅是展示，功能要求变高，后端又要处理数据，又要渲染页面，比较困难。")]),t._v(" "),s("p",[t._v("彼时 ajax 兴起，开启前后端分离的开发模式，即后端不提供完整的 html 页面，而是提供一些 API 使得前端可以获取\n到 JSON 数据，前端处理 JSON 数据并在 html 页面拼接，然后展示在浏览器上，这就是所谓的前端渲染。")]),t._v(" "),s("h3",{attrs:{id:"前后端渲染的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前后端渲染的优缺点"}},[t._v("#")]),t._v(" 前后端渲染的优缺点")]),t._v(" "),s("h4",{attrs:{id:"前端渲染-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端渲染-2"}},[t._v("#")]),t._v(" 前端渲染")]),t._v(" "),s("h5",{attrs:{id:"优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ul",[s("li",[t._v("前后端分离，前端关注 UI、后端关注 API")]),t._v(" "),s("li",[t._v("节约服务器")]),t._v(" "),s("li",[t._v("富交互")])]),t._v(" "),s("p",[t._v("由于"),s("strong",[t._v("路由")]),t._v("和框架的兴起，前端渲染有了更多优点：")]),t._v(" "),s("ul",[s("li",[t._v("前端开发单页面富应用 SPA")]),t._v(" "),s("li",[t._v("局部刷新")]),t._v(" "),s("li",[t._v("懒加载")])]),t._v(" "),s("p",[t._v("我们的主角：路由，终于上线了，但是在说路由前，还是继续说完前后端渲染。")]),t._v(" "),s("h5",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("ul",[s("li",[t._v("浏览器响应慢")]),t._v(" "),s("li",[t._v("不利于 SEO")])]),t._v(" "),s("h4",{attrs:{id:"后端渲染-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后端渲染-2"}},[t._v("#")]),t._v(" 后端渲染")]),t._v(" "),s("h5",{attrs:{id:"优点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点-2"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ul",[s("li",[t._v("后端有完整 html 页面，有利于 SEO 搜索引擎。")]),t._v(" "),s("li",[t._v("浏览器只需解析 html，性能好。")]),t._v(" "),s("li",[t._v("后端生成静态化文件，即缓存片段，减少数据库查询时间。")])]),t._v(" "),s("h5",{attrs:{id:"缺点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点-2"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("ul",[s("li",[t._v("开发效率低，前后端高耦合。")]),t._v(" "),s("li",[t._v("占用服务器资源。")]),t._v(" "),s("li",[t._v("前端一般写一个静态 HTML 文件，然后后端再修改为模板，模板变，前后端都得变（css、html）。")])]),t._v(" "),s("h3",{attrs:{id:"前后端渲染应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前后端渲染应用场景"}},[t._v("#")]),t._v(" 前后端渲染应用场景")]),t._v(" "),s("p",[t._v("比如企业级网站，主要功能是展示而没有复杂的交互，并且需要良好的 SEO，则这时我们就需要使用后端渲染；")]),t._v(" "),s("p",[t._v("而类似后台管理页面，交互性比较强，不需要 SEO 的考虑，那么就可以使用前端渲染。")]),t._v(" "),s("p",[t._v("另外，具体使用何种渲染方法并不是绝对的，比如某些网站采用"),s("strong",[t._v("首屏后端渲染")]),t._v("，即用户最开始打开的页面采用的是后端渲染，这样就保证了渲染速度，而其他的页面采用前端渲染，这样就完成了前后端分离。")]),t._v(" "),s("h2",{attrs:{id:"初识-router"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初识-router"}},[t._v("#")]),t._v(" 初识 Router")]),t._v(" "),s("p",[t._v("前面总结了，前端渲染造就了前后端分离，前端渲染的发展产生了更多功能：单页面富应用 SPA、局部刷新、懒加载等。")]),t._v(" "),s("p",[t._v("这里大多都依靠 "),s("strong",[t._v("Vue 和 Vue-router")]),t._v(" 实现。")]),t._v(" "),s("p",[t._v("SPA（Single Page Application）表示单页面富应用，指整个应用程序只有一个"),s("strong",[t._v("唯一完整")]),t._v("的 HTML 页面，而其它所谓的页面（url 变化），其实都是组件片段而已，每次都只进行局部刷新，并且可以在组件活跃时才加载该组件，称为懒加载。")]),t._v(" "),s("p",[t._v("多页面中，url 和服务器的映射是，不同的 url 返回不同的 html；而单页面，不同 url 表示不同的路径，返回不同路由对应的 html 片段。")]),t._v(" "),s("p",[t._v("通过 location.href 获取页面 url，完整 url 的组成部分为：")]),t._v(" "),s("p",[s("code",[t._v("协议://主机:端口/路径?查询#锚点")]),t._v("，例如 "),s("code",[t._v("https://baidu.com/s?ie=UTF-8&wd=百度")])]),t._v(" "),s("p",[t._v("SPA 只修改 url 的路径、查询和锚点，并不会改变主机和端口，故不改变服务器地址，也不使页面整体刷新。")]),t._v(" "),s("h3",{attrs:{id:"vue-router-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router-配置"}},[t._v("#")]),t._v(" vue-router 配置")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// router/index.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" VueRouter "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-router'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Home "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_c/Home.vue'")]),t._v("\nVue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VueRouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" routes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认渲染")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("redirect")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重定向")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Home\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'home'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("components")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("Home\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    routes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("mode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("history "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改路由模式，因为默认的 hash 模式出现 '#/'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" router\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" router "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./router'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("h")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("h")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"路由展示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由展示"}},[t._v("#")]),t._v(" 路由展示")]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("<router-view>")]),t._v(" 组件展示路由，当路由被激活时，"),s("code",[t._v("<router-view>")]),t._v(" 将会被替换为路由所指向的组件，故有几个 "),s("code",[t._v("<router-view>")]),t._v(" 就显示几个该组件。")]),t._v(" "),s("p",[s("code",[t._v("<router-view>")]),t._v(" 有一个 name 属性，表示路由指向的组件名。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("// 此路由指向多个组件，默认渲染 Radio 组件\n{\n   \tpath: '/radio',\n   \tname: 'Radio',\n   \tcomponents: {\n   \t\tdefault: Radio,\n   \t\tradio1: Radio1,\n   \t\tradio2: Radio2\n   \t}\n}\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("to")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/radio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("radio"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-view")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("radio1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-view")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" // 渲染 Radio1 组件\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-view")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("radio2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-view")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" // 渲染 Radio2 组件\n")])])]),s("h3",{attrs:{id:"路由跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由跳转"}},[t._v("#")]),t._v(" 路由跳转")]),t._v(" "),s("p",[t._v("分为声明式和编程式，通过 "),s("code",[t._v('<router-link to="#">')]),t._v(" 或 this.$router。")]),t._v(" "),s("p",[t._v("window 也提供了对浏览器的会话历史的访问的对象 history。")]),t._v(" "),s("h4",{attrs:{id:"router-link-标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#router-link-标签"}},[t._v("#")]),t._v(" router-link 标签")]),t._v(" "),s("p",[s("code",[t._v("<router-link>")]),t._v(" 默认渲染成 a 标签，to 属性代表路由路径")]),t._v(" "),s("ul",[s("li",[t._v('tag：改变标签，例如：tag="button"，将 a 标签渲染成按钮 button 标签')]),t._v(" "),s("li",[t._v("replace：不可以返回，没历史记录，直接加上")]),t._v(" "),s("li",[t._v("active-class：修改类名\n"),s("ul",[s("li",[t._v("注意：当 router-link 被响应时，会出现两个类，router-link-exact-active 和 router-link-active，类似于 a:hover")]),t._v(" "),s("li",[t._v("active-class 替换 router-link-active 类，还可以通过路由修改响应类，在 options 中加入：linkActiveClass:'className'")])])])]),t._v(" "),s("h4",{attrs:{id:"this-router"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this-router"}},[t._v("#")]),t._v(" this.$router")]),t._v(" "),s("p",[t._v("this.$router 访问路由实例，调用其 push 或 replace 方法，可以实现页面跳转。")]),t._v(" "),s("ul",[s("li",[t._v("this.$router.[push/replace](String | Object<{path,name,query,params,hash}>)")])]),t._v(" "),s("p",[t._v("push 和 replace 的不同的是，前者会在导航时向 history 添加新记录（即可以后退），后者不会。")]),t._v(" "),s("h4",{attrs:{id:"history"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history"}},[t._v("#")]),t._v(" history")]),t._v(" "),s("p",[t._v("简单常用的页面前进后退：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("history.back() 后退")])]),t._v(" "),s("li",[s("p",[t._v("history.forward() 前进")])]),t._v(" "),s("li",[s("p",[t._v("history.go(num) 往前进/后退 n 个页面，go(1) 等同于 forward()，go(-1) 等同于 back()")])])]),t._v(" "),s("p",[t._v("添加和修改历史记录中的条目，通常配合 window.onpopstate 使用。")]),t._v(" "),s("ul",[s("li",[t._v("history.pushState(state,title,url?)\n当调用该方法添加历史条目时，state 会被赋值给 history 的 state 属性。\n调用此方法后，任意前进后退都会触发 window.onpopstate 回调。")]),t._v(" "),s("li",[t._v("history.replaceState(state,title,url?)\n替换当前 url 而不是新建。\n因为是替换，故 pushState 回退会先回到调用前 url， replaceState 会直接回到url 的前一个 url。\n例如当前是 'url1' ，pushState 到 'url2'，按回退，回到 'url1'，若 replaceState 到 'url2' ，按回退直接到 'url1' 的上一级，'url1' 已经不复存在。")])]),t._v(" "),s("h3",{attrs:{id:"动态路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态路由"}},[t._v("#")]),t._v(" 动态路由")]),t._v(" "),s("p",[t._v("普通的路由是字符串，内部使用 "),s("code",[t._v("/")]),t._v(" 分路径。")]),t._v(" "),s("p",[t._v("配置路由时，在路径前加 ':' 表示动态路由，即路径为一个变量，根据页面传来的参数显示不一样的 url 地址，但是指向同一个组件。")]),t._v(" "),s("p",[t._v("例如，我们可能有一个 User 组件，它应该对所有用户进行渲染，但用户 ID 不同。")]),t._v(" "),s("p",[t._v("同学 A 显示 'user/A'，同学 B 显示 'user/B'，可以使用 '/user/:userId' 指代这一类路由，同学 A 时 userId 为 A，同学 B 时 userId 为 B。")]),t._v(" "),s("p",[t._v("使用 router-link 中设置动态路由：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":to")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/user/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("+userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n<router-link to=\"'/user/lyf\"\ndata(){\n    return {\n      userId:'luoyufeng'\n    }\n}\n// 最终页面路径为 '/user/luoyufeng'\n")])])]),s("p",[t._v("点击这两个 router-link，此时修改路径指向同一个组件，采用复用，而不是销毁重建，故不会重新调用 create 等周期函数。")]),t._v(" "),s("p",[t._v("页面动态修改 userId 时，路由不会变化，需重新触发，例如再次点击 router-link 或 this.$router.push/replace。")]),t._v(" "),s("h3",{attrs:{id:"路由的匹配语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由的匹配语法"}},[t._v("#")]),t._v(" 路由的匹配语法")]),t._v(" "),s("p",[t._v("这一 part 比较少用，路由可以使用正则、可选参数等语法定义动态参数。")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://router.vuejs.org/zh/guide/essentials/route-matching-syntax.html#%E5%9C%A8%E5%8F%82%E6%95%B0%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%AD%A3%E5%88%99",target:"_blank",rel:"noopener noreferrer"}},[t._v("路由的匹配语法"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"路由嵌套"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由嵌套"}},[t._v("#")]),t._v(" 路由嵌套")]),t._v(" "),s("p",[t._v("当不完全符合路由时，也是无法匹配的，例如跳转地址是：'user/luoyufeng/18'，但是配置的路由路径为 'user/luoyufeng'，点击时无法指向该路由。")]),t._v(" "),s("p",[t._v("嵌套路由指的是，router-view 所指向的组件也包含 router-view，若想渲染，需在路由使用 children 属性配置子路由。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user/:id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" testRouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"18"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 匹配 "/user/:id/18"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" testCW"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("此时跳转地址为 'user/luoyufeng/18' 时，第一层 router-view 渲染为 testRouter，第二层 router-view 渲染为 testCW。")]),t._v(" "),s("p",[t._v("跳转地址为 'user/luoyufeng' 时，第一层 router-view 渲染为 testRouter，第二层 router-view 渲染为空。")]),t._v(" "),s("p",[t._v("跳转地址为 'user/luoyufeng/20' 时，每一层 router-view 都渲染为空。")]),t._v(" "),s("p",[t._v("若想跳转地址为 'user/luoyufeng' 时也渲染第二层 view-router，可以配置一个 path 为空的子路由。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user/:id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" testRouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 匹配 "/user/:id"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" testCW"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"18"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 匹配 "/user/:id/18"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" testCW"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"路由进阶"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由进阶"}},[t._v("#")]),t._v(" 路由进阶")]),t._v(" "),s("h3",{attrs:{id:"路由守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由守卫"}},[t._v("#")]),t._v(" 路由守卫")]),t._v(" "),s("p",[t._v("可以在路由跳转前进行查验和拦截，根据全页面跳转和组件跳转，分为全局路由守卫，和组件路由守卫。")]),t._v(" "),s("p",[t._v("常见使用场景：用户未登录时，修改路由需默认跳转到登录页面")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("router.beforeEach((to, from, next?Function)=>{}:false|router|other)\n前置路由守卫，在路由跳转前生效，若参数回调为 false 跳转失败，返回一个路由字符串/对象，则跳转至该路由，返回其他，正常跳转。\nto 表示将要去往路由\nfrom 表示来自路由\nnext 表示放行函数，"),s("strong",[t._v("必须且只能调用一次")]),t._v("，可以调用多次，但最终有效的只有最先执行的。")]),t._v(" "),s("ul",[s("li",[t._v("不传参则表示路由跳转确认；")]),t._v(" "),s("li",[t._v("传参数 Object/String 时，表示跳转路由的信息，覆盖 to 参数，重新进行路由跳转，也就是还会再次触发 beforeEach；")]),t._v(" "),s("li",[t._v("传参数 Error 实例时，路由终止，且将 error 传给 router.onError；")]),t._v(" "),s("li",[t._v("传参数 false 时表示，路由终止，且路由强制修改会跳转前。")])])]),t._v(" "),s("li",[s("p",[t._v("router.afterEach((to, from)=>{})\n没有 next 参数，因为他在导航后，已经无法改变路由跳转。\n常常用于路由跳转完后的初始化。")])])]),t._v(" "),s("h4",{attrs:{id:"next-的坑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#next-的坑"}},[t._v("#")]),t._v(" next() 的坑")]),t._v(" "),s("ul",[s("li",[t._v("调用多个只会执行一个")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每次路由跳转只执行此")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("路由跳转的回调地狱")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("本意是想让路由跳转到 '/test'，但是由于每次修改路由，又会再次调用路由守卫，最终变成回调地狱，即 next 触发路由守卫，路由守卫触发 next。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// next("/test") 触发 ')]),t._v("\n  router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// next("/test"); 触发 ')]),t._v("\n      router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// next("/test"); 触发 ')]),t._v("\n        router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// next("/test"); 触发 ')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("最终也不跳转，只会报错 "),s("code",[t._v("Maximum call stack size exceeded")]),t._v("，即超过最大调用堆栈。")]),t._v(" "),s("ul",[s("li",[t._v("必须要有 next() 作为出口\n要么不使用 next(?)，要么必须存在 next() 作为回调出口。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/logon'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果要去的地方不是 /home ， 就放行")]),t._v("\n   \t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"其他路由守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他路由守卫"}},[t._v("#")]),t._v(" 其他路由守卫")]),t._v(" "),s("ul",[s("li",[t._v("定义路由时守卫\nbeforeEnter\n只在进入路由触发，动态路由时不触发，需显示调用 next()，否则不进入")]),t._v(" "),s("li",[t._v("路由组件内守卫\nbeforeRouteEnter // 进入该组件时触发，需显示调用 next()，否则不进入\nbeforeRouteUpdate // 动态路由时触发\nbeforeRouteLeave // 离开该组件时触发\n即和 methods 等属性一样定义在组件内部")])]),t._v(" "),s("h3",{attrs:{id:"路由懒加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由懒加载"}},[t._v("#")]),t._v(" 路由懒加载")]),t._v(" "),s("p",[t._v("即需要使用时才加载组件，")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// import UserDetails from './views/UserDetails'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换成")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("UserDetails")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./views/UserDetails'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("webpack 懒加载，把某个路由下的所有组件都打包在同个异步块 (chunk) 中。只需要使用命名 chunk，一个特殊的注释语法来提供 chunk name")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("UserProfileEdit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackChunkName: "group-user" */')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./UserProfileEdit.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);