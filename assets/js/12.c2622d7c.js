(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{277:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_1-前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[t._v("#")]),t._v(" 1 前言")]),t._v(" "),a("h2",{attrs:{id:"_1-1-主要思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-主要思想"}},[t._v("#")]),t._v(" 1.1 主要思想")]),t._v(" "),a("ol",[a("li",[t._v("不渲染所有的 DOM")]),t._v(" "),a("li",[t._v("它将列表拆分为 cluster ，然后显示当前滚动位置的元素")]),t._v(" "),a("li",[t._v("并在列表的顶部和底部添加额外的行来模拟表格的全高度")]),t._v(" "),a("li",[t._v("这样浏览器就会像显示完整列表一样显示滚动条")])]),t._v(" "),a("h2",{attrs:{id:"_1-2-用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-用法"}},[t._v("#")]),t._v(" 1.2 用法")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://clusterize.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("clusterize.js"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("scrollArea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("table")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("tbody")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("contentArea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("tr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("..."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("tr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("tbody")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("table")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<tr>…</tr>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<tr>…</tr>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" clusterize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Clusterize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rows")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("scrollId")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'scrollArea'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("contentId")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'contentArea'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-options"}},[t._v("#")]),t._v(" 1. options")]),t._v(" "),a("p",[t._v("单次仅会渲染条数 = 一块的行数 * 集群中的块数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("Name")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Require")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("rows")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("取决于")]),t._v(" "),a("td",[t._v("1. 存在现有的标记就不需要；2. 通过接收数据渲染则需要")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("scrollId")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("必需")]),t._v(" "),a("td",[t._v("用作滚动区域的父标签的 Id 或 DOM 节点")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("contentId")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("必需")]),t._v(" "),a("td",[t._v("将放置内容的标签的 ID 或 DOM 节点")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("rows_in_block")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可选的")]),t._v(" "),a("td",[t._v("块中的行数 默认50")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("blocks_in_cluster")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可选的")]),t._v(" "),a("td",[t._v("集群中的块数 默认4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("tag")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可选的")]),t._v(" "),a("td",[t._v("支持的元素：间隔额外的行，空数据行 默认空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("show_no_data_row")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可选的")]),t._v(" "),a("td",[t._v("无数据时是否显示“空”占位符行 默认true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("no_data_class")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可选的")]),t._v(" "),a("td",[t._v("无数据时的占位符内容 默认“无数据”")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("no_data_text")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可选的")]),t._v(" "),a("td",[t._v("无数据时的占位符类名 默认“clusterize-no-data”")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("keep_parity")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可选的")]),t._v(" "),a("td",[t._v("添加额外的标签以保持行的奇偶性 默认 true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("callbacks")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可选的")]),t._v(" "),a("td")])])]),t._v(" "),a("ul",[a("li",[t._v("callbacks 的属性\n"),a("ul",[a("li",[t._v("clusterWillChange：新集群替换旧集群之前触发")]),t._v(" "),a("li",[t._v("clusterChanged：新集群替换旧集群后触发")]),t._v(" "),a("li",[t._v("scrollingProgress：滚动时触发，返回滚动进度位置")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-methods"}},[t._v("#")]),t._v(" 2. methods")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("Name")]),t._v(" "),a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".update()")]),t._v(" "),a("td",[t._v("array")]),t._v(" "),a("td",[t._v("数据更新时列表更新")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".append()")]),t._v(" "),a("td",[t._v("array")]),t._v(" "),a("td",[t._v("追加新数据到列表中")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".prepend()")]),t._v(" "),a("td",[t._v("array")]),t._v(" "),a("td",[t._v("添加新数据到列表中")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".refresh()")]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("刷新行高 Clusterize必须始终知道当前行高")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".getRowsAmount()")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("获取总行数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".getScrollProgress()")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("获取当前滚动进度")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".clear()")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("清除列表")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".destroy()")]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("销毁 clusterize实例 参数为true时从列表中删除所有数据，不指定or false则将所有隐藏数据插入列表")])])])]),t._v(" "),a("h1",{attrs:{id:"_2-源码分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-源码分析"}},[t._v("#")]),t._v(" 2 源码分析")]),t._v(" "),a("h2",{attrs:{id:"_2-1-准备工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-准备工作"}},[t._v("#")]),t._v(" 2.1 准备工作")]),t._v(" "),a("h3",{attrs:{id:"_1-iife-立即执行函数-避免污染全局环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-iife-立即执行函数-避免污染全局环境"}},[t._v("#")]),t._v(" 1. IIFE 立即执行函数 -- 避免污染全局环境")]),t._v(" "),a("ul",[a("li",[t._v("自执行匿名函数 "),a("code",[t._v("(function() {})()")]),t._v(" "),a("ol",[a("li",[t._v("匿名函数 "),a("code",[t._v("function() {}")]),t._v(" 拥有独立的词法作用域")]),t._v(" "),a("li",[t._v("再一次使用 () 创建了一个立即执行函数表达式，js 引擎到此将直接执行函数")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("闭包前写 ; 是为了防止代码压缩时，前面代码没写 ; 造成报错")])]),t._v(" "),a("h3",{attrs:{id:"_2-匿名函数-定义一个适应所有环境的-js-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-匿名函数-定义一个适应所有环境的-js-模块"}},[t._v("#")]),t._v(" 2. 匿名函数 -- 定义一个适应所有环境的 js 模块")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" definition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" module "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("definition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" define "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" define"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("definition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("definition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("typeof module != 'undefined'")]),t._v(" ：使用 Commonjs 规范导出，能在 nodejs 中引入")]),t._v(" "),a("li",[a("code",[t._v("typeof define == 'function' && typeof define.amd == 'obj'")]),t._v("：使用 AMD 规范导出，能在浏览器引入")]),t._v(" "),a("li",[t._v("其它：直接放在全局对象上")])]),t._v(" "),a("h3",{attrs:{id:"_3-传入的-definition-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-传入的-definition-函数"}},[t._v("#")]),t._v(" 3. 传入的 definition 函数")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检测ie版本")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ie "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** ... */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检测mac版本")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" is_mac "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  核心代码")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Clusterize")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Clusterize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解决兼容问题的函数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于 绑定事件 的函数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("evt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fnc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** ... */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于 解绑事件 的函数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("off")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("evt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fnc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** ... */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于判断是否数组")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** ... */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于获取元素的样式")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" elem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** ... */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-2-核心代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-核心代码"}},[t._v("#")]),t._v(" 2.2 核心代码")]),t._v(" "),a("h3",{attrs:{id:"_1-自定义构造函数方式创建对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-自定义构造函数方式创建对象"}},[t._v("#")]),t._v(" 1. 自定义构造函数方式创建对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Clusterize")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Clusterize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("构造函数上主要定义 -- 被实例对象访问的属性和方法")]),t._v(" "),a("li",[t._v("原型对象上主要定义 -- 被构造函数访问的方法")])]),t._v(" "),a("h3",{attrs:{id:"_2-clusterize-构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-clusterize-构造函数"}},[t._v("#")]),t._v(" 2. Clusterize 构造函数")]),t._v(" "),a("h4",{attrs:{id:"流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[t._v("#")]),t._v(" 流程")]),t._v(" "),a("ol",[a("li",[t._v("定义全局属性 "),a("code",[t._v("options")]),t._v(" -- 使用传入的值 | 设置默认值")]),t._v(" "),a("li",[t._v("获取传入的 "),a("code",[t._v("scrollId")]),t._v(" "),a("code",[t._v("contentId")]),t._v(" 绑定的元素")]),t._v(" "),a("li",[a("code",[t._v("tabindex")]),t._v(" 令浏览器关注滚动列表")]),t._v(" "),a("li",[t._v("定义私有参数 "),a("code",[t._v("rows")]),t._v(" "),a("code",[t._v("cache")]),t._v(" "),a("code",[t._v("scroll_top")])]),t._v(" "),a("li",[t._v("添加初始数据")]),t._v(" "),a("li",[t._v("恢复滚动位置")]),t._v(" "),a("li",[t._v("添加 "),a("code",[t._v("scroll")]),t._v(" 事件 "),a("code",[t._v("resize")]),t._v(" 事件")]),t._v(" "),a("li",[t._v("定义全局方法")])]),t._v(" "),a("h4",{attrs:{id:"预备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预备"}},[t._v("#")]),t._v(" 预备")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("this instanceof Clusterize")])])]),t._v(" "),a("ul",[a("li",[t._v("通过 "),a("code",[t._v("this instanceof xxx")]),t._v(" 来判断有没有用 new 关键词调用")])]),t._v(" "),a("blockquote",[a("p",[t._v("Clusterize 的原型对象在 this 的原型链上")])]),t._v(" "),a("ul",[a("li",[t._v("为了防止不是 "),a("code",[t._v("new Clusterize()")]),t._v(" 方式创建对象而是直接 "),a("code",[t._v("Clusterize()")]),t._v(" 调用函数出现错误")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Clusterize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Clusterize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("var self = this;")])])]),t._v(" "),a("ul",[a("li",[t._v("很常见的避免 "),a("code",[t._v("this")]),t._v(" 指向不明确不能直接拿到实例上的属性")])]),t._v(" "),a("h4",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("self.options")])]),t._v(" "),a("ul",[a("li",[t._v("为实例创建时没设置的属性设置默认值 + 设置的属性值 写入 "),a("code",[t._v("self.options")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("self.scollId_elem self.contentId_elem")])]),t._v(" "),a("ul",[a("li",[t._v("获取传入的 "),a("code",[t._v("scrollId contentId")]),t._v(" 绑定的元素")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("self.contentId_elem")]),t._v(" 元素设置属性 "),a("code",[t._v("tabindex")])]),t._v(" "),a("ul",[a("li",[t._v("使用 "),a("code",[t._v("tabindex")]),t._v(" 使得用户能够通过键盘 "),a("code",[t._v("tab")]),t._v(" 键关注（聚焦）滚动列表")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("scrollTop")]),t._v(" 获取 "),a("code",[t._v("self.contentId_elem")]),t._v(" 元素顶部与可视区顶部的距离")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("scroll")]),t._v(" 事件")]),t._v(" "),a("ul",[a("li",[t._v("修复了Mac上的滚动问题--使用防抖 只触发50ms内的最后一次滚动")]),t._v(" "),a("li",[t._v("集群号发生变化时 -- 检测数据变化并插入到DOM")]),t._v(" "),a("li",[t._v("有传入滚动时触发回调，则返回滚动进度位置")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("resize")]),t._v(" 事件")]),t._v(" "),a("ul",[a("li",[t._v("设置开关 -- 只触发 100ms 内的最后一次")])])])]),t._v(" "),a("h4",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("destory()")])]),t._v(" "),a("ul",[a("li",[t._v("事件解绑")]),t._v(" "),a("li",[t._v("置空列表数据 | 将所有隐藏数据插入列表")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("refresh()")])]),t._v(" "),a("ul",[a("li",[t._v("单行高有变化时 || 强制刷新行高时 --\x3e 更新列表")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("怎样判断行高是否变化呢？")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[a("code",[t._v("update()")])]),t._v(" "),a("ol",[a("li",[t._v("获取滚动进度暂存")]),t._v(" "),a("li",[t._v("行数 * 单行高 < 元素顶部与可视区顶部的距离 时\n"),a("ul",[a("li",[t._v("重置滚动距离为0 重置当前集群号为0")])])]),t._v(" "),a("li",[t._v("检测数据变化并插入到DOM")]),t._v(" "),a("li",[t._v("恢复滚动进度")])])]),t._v(" "),a("li",[a("p",[t._v("其他方法")])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("clear()")])]),t._v(" "),a("li",[a("code",[t._v("getRowsAmount()")])]),t._v(" "),a("li",[a("code",[t._v("getScrollProgress()")])]),t._v(" "),a("li",[a("code",[t._v("append()")])]),t._v(" "),a("li",[a("code",[t._v("prepend()")])])]),t._v(" "),a("h3",{attrs:{id:"_3-clusterize-prototype-原型对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-clusterize-prototype-原型对象"}},[t._v("#")]),t._v(" 3. Clusterize.prototype 原型对象")]),t._v(" "),a("h4",{attrs:{id:"_1-getrowsheight"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-getrowsheight"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("getRowsHeight()")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 写入单行高、单块高、总行数、集群高度 + 判断单行高是否变化\n * @param {array} rows 组件接收到的数据列表\n * @return {boolean} 集群高度变化则返回true\n * */")]),t._v(" \n")])])]),a("ol",[a("li",[t._v("一行高 "),a("code",[t._v("item_height")]),t._v("：获取该元素的高度\n"),a("ul",[a("li",[t._v("表格：考虑单元格的边距 -- "),a("code",[t._v("item_height = 元素高度 + 相邻单元格边框之间的距离")])]),t._v(" "),a("li",[t._v("非表格：考虑外边距 -- "),a("code",[t._v("item_height = 元素高度 + max(top外边距, bottom外边距)")])])])]),t._v(" "),a("li",[t._v("一块高 "),a("code",[t._v("block_height = 单行高 * 块中的行数")])]),t._v(" "),a("li",[t._v("总行数 "),a("code",[t._v("rows_in_cluster = 集群中的块数 * 块中的行数")])]),t._v(" "),a("li",[t._v("集群高度 "),a("code",[t._v("cluster_height = 集群中的块数 * 单块高")])])]),t._v(" "),a("ul",[a("li",[t._v("返回值\n"),a("ul",[a("li",[t._v("单行高变化时返回 "),a("code",[t._v("true")])])])])]),t._v(" "),a("h4",{attrs:{id:"_2-inserttodom-检测数据变化并插入到dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-inserttodom-检测数据变化并插入到dom"}},[t._v("#")]),t._v(" 2. "),a("code",[t._v("insertToDOM()")]),t._v(" 检测数据变化并插入到DOM")]),t._v(" "),a("blockquote",[a("p",[t._v("初始化时 翻页 页码发生改变时 集群号改变时 触发")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 检测数据变化并插入到DOM\n * @param {array} rows 接收到的数据列表\n * @param {object} cache 当前展示的数据\n * @return {object} \n * */")]),t._v(" \n")])])]),a("ol",[a("li",[t._v("获取集群高度")]),t._v(" "),a("li",[t._v("比较 当前展示的数据 与 接收到的数据的 变化\n"),a("ul",[a("li",[t._v("当前集群的数据是否变化")]),t._v(" "),a("li",[t._v("集群以上未渲染数据的高度是否变化")]),t._v(" "),a("li",[t._v("集群以下未渲染数据的高度是否变化")])])]),t._v(" "),a("li",[t._v("当前集群的数据变化 || 集群以上未渲染数据的高度变化时 写入 "),a("code",[t._v("content_elem")]),t._v(" 的后代元素\n"),a("ol",[a("li",[t._v("存在 集群以上未渲染数据的高度变化 -- 创建标签\n"),a("ul",[a("li",[t._v("需要添加额外的标签时，创建额外的行")]),t._v(" "),a("li",[a("code",[t._v('layout.push(<tr class="clusterize-extra-row clusterize-top-space" style="集群以上未渲染数据的高度"></tr>)')])])])]),t._v(" "),a("li",[t._v("创建标签 "),a("code",[t._v("<tr>当前集群的数据</tr>")])]),t._v(" "),a("li",[t._v("存在 集群以下未渲染数据时，创建标签\n"),a("ul",[a("li",[a("code",[t._v('layout.push(<tr class="clusterize-extra-row clusterize-top-space" style="集群以下未渲染数据的高度"></tr>)')])])])]),t._v(" "),a("li",[t._v("触发 传入的回调的函数 -- 替换前触发函数")]),t._v(" "),a("li",[t._v("设置 "),a("code",[t._v("content_elem")]),t._v(" 元素的后代元素："),a("code",[t._v("this.html(layout.join(''))")])]),t._v(" "),a("li",[t._v("css 相关")]),t._v(" "),a("li",[t._v("触发 传入的回调的函数 -- 替换后触发函数")])])]),t._v(" "),a("li",[t._v("集群以下未渲染数据的高度变化时 写入content_elem的后代元素\n"),a("ul",[a("li",[a("code",[t._v("content_elem")]),t._v(" 元素追加子节点 "),a("code",[t._v('<tr style="集群以下未渲染数据的高度"></tr>')])])])])]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("怎样写入后代元素")]),t._v(" "),a("li",[t._v("怎样获取 集群以上未渲染数据，集群以下未渲染数据，需要展示的数据 ？")])])]),t._v(" "),a("h4",{attrs:{id:"_3-html-设置-content-elem-元素的后代元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-html-设置-content-elem-元素的后代元素"}},[t._v("#")]),t._v(" 3. "),a("code",[t._v("html()")]),t._v(" 设置 "),a("code",[t._v("content_elem")]),t._v(" 元素的后代元素")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 将数据列表写入tbody -- 适配 ie <= 9不允许对表元素使用 innerHTML\n * @param {array} data 数据列表\n * @return void\n * */")]),t._v(" \n")])])]),a("ul",[a("li",[a("code",[t._v("content_elem.innerHTML = data")])])]),t._v(" "),a("h5",{attrs:{id:"兼容-ie9以下版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#兼容-ie9以下版本"}},[t._v("#")]),t._v(" 兼容 ie9以下版本")]),t._v(" "),a("blockquote",[a("p",[t._v("ie <= 9不允许对表元素使用 innerHTML")])]),t._v(" "),a("ol",[a("li",[t._v("使用 "),a("code",[t._v("ele.removeChild()")]),t._v(" 将 "),a("code",[t._v("content_elem")]),t._v(" 的子元素全部移除")]),t._v(" "),a("li",[t._v("将包含所有子元素的字符串截取出来 --\x3e 转化为数组")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("ele.appendChild()")]),t._v(" 将 "),a("code",[t._v("content_elem")]),t._v(" 的子元素写入")])]),t._v(" "),a("h4",{attrs:{id:"_4-generate-为当前滚动位置生成集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-generate-为当前滚动位置生成集群"}},[t._v("#")]),t._v(" 4. "),a("code",[t._v("generate()")]),t._v(" 为当前滚动位置生成集群")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 为当前滚动位置生成集群\n * @param {array} rows 接收到的数据列表\n * @return {object} { 集群以上未渲染数据，集群以下未渲染数据，开始的行数（不确定），需要展示的数据 }\n * */")]),t._v(" \n")])])]),a("ol",[a("li",[t._v("数据行数 < 单块行数时，返回 "),a("code",[t._v("{0, 0, 0, 当前数据 || 生成空行}")])]),t._v(" "),a("li",[t._v("否则\n"),a("ol",[a("li",[t._v("开始的行数（序列号） = (总行数 - 单块行数) * 当前集群块编号 || 0\n"),a("ul",[a("li",[t._v("开始行数为0时，序列号为1")])])]),t._v(" "),a("li",[t._v("结束的行数 = 开始的行数 + 单块行数")]),t._v(" "),a("li",[t._v("隐藏的上半部分高度 = 开始的行数 * 单行高 || 0")]),t._v(" "),a("li",[t._v("隐藏的下半部分高度 = （总行数-结束的行数） * 单行高 || 0")]),t._v(" "),a("li",[t._v("返回 "),a("code",[t._v("{, , , rows[开始的行数--结束的行数]}")])])])])]),t._v(" "),a("blockquote",[a("p",[t._v("怎样获取当前集群块编号呢？")])]),t._v(" "),a("h4",{attrs:{id:"_5-getclusternum-获取当前集群块编号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-getclusternum-获取当前集群块编号"}},[t._v("#")]),t._v(" 5. "),a("code",[t._v("getClusterNum()")]),t._v(" 获取当前集群块编号")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 获取当前集群块编号\n * @param {array} rows 构造函数传入的数据列表\n * @return {string} 当前集群块编号\n * */")]),t._v(" \n")])])]),a("ol",[a("li",[t._v("计算出 "),a("strong",[t._v("滚动距离 / (集群高度 - 单块高)")]),t._v(" 的值")])]),t._v(" "),a("h2",{attrs:{id:"附加"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附加"}},[t._v("#")]),t._v(" 附加")]),t._v(" "),a("h3",{attrs:{id:"模块化规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化规范"}},[t._v("#")]),t._v(" 模块化规范")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/30f53349a1c4",target:"_blank",rel:"noopener noreferrer"}},[t._v("写一个适应所有环境的js模块"),a("OutboundLink")],1)]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("规范")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("框架")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("定义与引入")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("CommonJS")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("node.js")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("module.exports")]),t._v(" + "),a("code",[t._v("require()")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("AMD")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("require.js")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("define")]),t._v(" + "),a("code",[t._v("require()")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("CMD")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("sea.js")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ES Module")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ES6")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),a("h4",{attrs:{id:"_1-nodejs-commonjs规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-nodejs-commonjs规范"}},[t._v("#")]),t._v(" 1.nodejs -- CommonJS规范")]),t._v(" "),a("blockquote",[a("p",[t._v("Commonjs：让js不止运行在浏览器")])]),t._v(" "),a("ul",[a("li",[t._v("CommonJS 规范定义了3个全局变量：\n"),a("ul",[a("li",[a("code",[t._v("require")]),t._v(" 用于引入一个模块")]),t._v(" "),a("li",[a("code",[t._v("exports")]),t._v(" 对外暴露模块的接口，可以是任何类型")]),t._v(" "),a("li",[a("code",[t._v("module")]),t._v(" 是这个模块本身的对象")])])])]),t._v(" "),a("h4",{attrs:{id:"_2-浏览器-cmd-amd-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-浏览器-cmd-amd-规范"}},[t._v("#")]),t._v(" 2. 浏览器 -- CMD AMD 规范")]),t._v(" "),a("ul",[a("li",[t._v("CMD、AMD 规范定义了全局函数 "),a("code",[t._v("define()")]),t._v(" 来创建一个模块")])]),t._v(" "),a("h3",{attrs:{id:"this-指向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this-指向"}},[t._v("#")]),t._v(" this 指向")]),t._v(" "),a("ul",[a("li",[t._v("this指向由函数调用的方式决定")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("调用方式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("举例")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("this 指向")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("普通函数调用")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("f()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("window   严格模式 undefined")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("对象方法调用")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("o.f()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("o")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("构造函数调用")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("new f()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("当前的实例对象")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("函数上下文")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("call apply bind")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("第一个参数")])])])]),t._v(" "),a("h3",{attrs:{id:"元素的-tabindex-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素的-tabindex-属性"}},[t._v("#")]),t._v(" 元素的 tabIndex 属性")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("tabIndex")]),t._v(" 属性指示该元素是否聚焦，以及相关的顺序键盘导航")])]),t._v(" "),a("li",[a("p",[t._v("属性值：")]),t._v(" "),a("ul",[a("li",[t._v("负数：可聚焦，不参与键盘导航")]),t._v(" "),a("li",[t._v("0：可聚焦，可通过键盘导航聚焦至该元素，其相对顺序是当前所处的 DOM 结构决定")]),t._v(" "),a("li",[t._v("正数：可聚焦，可通过键盘导航聚焦至该元素，其相对顺序按照 "),a("code",[t._v("tabindex")]),t._v(" 值递增而滞后获焦")])])])]),t._v(" "),a("h3",{attrs:{id:"css-属性-pointer-events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-属性-pointer-events"}},[t._v("#")]),t._v(" css 属性 "),a("code",[t._v("pointer-events")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("指定在什么情况下某个特定的图形元素可以成为鼠标事件的 "),a("code",[t._v("target")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("pointer-events: auto;")]),t._v("：默认属性值")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("pointer-events: none;")]),t._v("：元素永远不会成为鼠标事件的 "),a("code",[t._v("target")])])])]),t._v(" "),a("h3",{attrs:{id:"缺陷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺陷"}},[t._v("#")]),t._v(" 缺陷")]),t._v(" "),a("p",[t._v("默认渲染条数 = 每块的条数 * 多少块，当渲染条数不足时出现白屏。\n默认渲染下一屏 = 屏幕高度达到当前集群的最后一块，当渲染不及时时也出现白屏。")])])}),[],!1,null,null,null);a.default=n.exports}}]);